const MaxPopupLifetime=450,TabActivatedOnStartupDelay=750,TabRemovedDelay=1e3,MinTabDwellTime=750,RestartDelay=10000,BadgeColors={light:{normal:"#a0a0a0",inverted:"#3367d6"},dark:{normal:"#666",inverted:"#3367d6"}},IconPaths={light:{normal:{path:{19:"img/icon-19.png",38:"img/icon-38.png"}},inverted:{path:{19:"img/icon-19-inverted.png",38:"img/icon-38-inverted.png"}}}};IconPaths.dark={normal:IconPaths.light.inverted,inverted:IconPaths.light.normal};const Manifest=chrome.runtime.getManifest();let gStartingUp=!1,gIgnoreNextTabActivation=!1,gInstalledPromise=new Promise(a=>{chrome.runtime.onInstalled.addListener(b=>a(b))});function debounce(a,b,c=this){let d,e;const f=(...g)=>{e=()=>(f.cancel(),a.apply(c,g)),clearTimeout(d),d=setTimeout(e,b)};return f.cancel=()=>{clearTimeout(d),d=null,e=null},f.execute=()=>Promise.resolve(e&&e()),f}chrome.runtime.onStartup.addListener(()=>{const a=debounce(()=>{chrome.tabs.onActivated.removeListener(a),DEBUG&&console.log("==== last onActivated"),gStartingUp&&require(["background/recent-tabs"],function(a){return a.updateAll().then(()=>{DEBUG&&console.log("===== updateAll done"),gStartingUp=!1})})},TabActivatedOnStartupDelay);DEBUG&&console.log("== onStartup"),gStartingUp=!0,chrome.tabs.onActivated.addListener(a)}),require(["cp","background/recent-tabs","background/page-trackers","background/quickey-storage","background/settings","background/constants"],function(a,b,c,d,e,f){function g(a){gIgnoreNextTabActivation||(v&&l(),v=!1,z(a)),gIgnoreNextTabActivation=!1}function h(a){const c=x?"single":"repeated";"1-previous-tab"===a?(v=!0,b.navigate(-1),o.event("recents","previous",c)):"2-next-tab"===a?(v=!0,b.navigate(1),o.event("recents","next",c)):"30-toggle-recent-tabs"===a?i(!0):void 0}function i(a){w=w.then(z.execute).then(b.toggle).then(z.execute).then(()=>o.event("recents",a?"toggle-shortcut":"toggle"))}function j(){m(),z.execute().then(()=>d.get(({tabIDs:b,tabsByID:c})=>{const[d,e]=b.slice(-2),f=c[d],g=c[e];f&&g&&f.windowId!==g.windowId&&a.tabs.get(d).then(({active:b})=>{b||(gIgnoreNextTabActivation=!0,a.tabs.update(d,{active:!0}).catch(console.error))})}))}function k(a){const b=matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",c=a?"inverted":"normal",d=IconPaths[b][c],e=BadgeColors[b][c];return{paths:d,badgeColor:e}}function l(){const b=f.IsDev?j:m,{paths:c,badgeColor:d}=k(!0);return x=!1,clearTimeout(p),p=setTimeout(b,MinTabDwellTime),Promise.all([y?a.browserAction.setBadgeBackgroundColor({color:d}):a.browserAction.setIcon(c)]).catch(o.exception)}function m(){const{paths:b,badgeColor:c}=k();return x=!0,a.browserAction.setIcon(b),Promise.all([a.browserAction.setBadgeBackgroundColor({color:c}),a.browserAction.setIcon(b)]).catch(o.exception)}function n(b=0){t+=b;const c=Manifest.short_name,d=y?t+"":"",e=y?`${c} - ${t} open tab${1==t?"":"s"}`:c;return Promise.all([a.browserAction.setBadgeText({text:d}),a.browserAction.setTitle({title:e})]).catch(o.exception)}const o=c.background;let p,q,r,s,t=0,u=!1,v=!1,w=Promise.resolve(),x=!0,y=!0;const z=debounce(({tabId:c})=>a.tabs.get(c).then(b.add).catch(a=>{a&&a.message&&0!=a.message.indexOf("No tab")&&o.exception(a)}),MinTabDwellTime),A=debounce((a,c)=>{gStartingUp||b.remove(a,c)},TabRemovedDelay);chrome.tabs.onActivated.addListener(a=>{gStartingUp||g(a)}),chrome.tabs.onCreated.addListener(a=>{n(1),gStartingUp||a.active||b.add(a,!0)}),chrome.tabs.onRemoved.addListener((a,b)=>{n(-1),A(a,b)}),chrome.tabs.onReplaced.addListener((a,c)=>{gStartingUp||b.replace(c,a)}),chrome.windows.onFocusChanged.addListener(b=>{gStartingUp||b==chrome.windows.WINDOW_ID_NONE||b==q||(q=b,a.tabs.query({active:!0,windowId:b}).then(([a={}])=>g({tabId:a.id})))}),chrome.commands.onCommand.addListener(a=>{gStartingUp?(gStartingUp=!1,b.updateAll().then(()=>h(a))):h(a)}),chrome.runtime.onConnect.addListener(a=>{const b=Date.now();let c=!1;gStartingUp=!1,u=!0,a.onMessage.addListener(a=>{c="closedByEsc"==a}),a.onDisconnect.addListener(()=>{u=!1,!c&&Date.now()-b<MaxPopupLifetime?i():o.pageview()})}),chrome.runtime.onMessage.addListener(a=>{f.ShowTabCount.Key in a&&(y=a[f.ShowTabCount.Key],m().then(()=>n()))}),chrome.runtime.onUpdateAvailable.addListener(a=>{function b(){u?setTimeout(b,RestartDelay):(DEBUG&&console.log("=== reloading"),chrome.runtime.reload())}try{o.event("extension","update-available",a&&a.version)}catch(a){DEBUG&&console.log(a)}b()}),window.log=function(...a){DEBUG&&console.log.apply(console,a)},e.get().then(a=>y=a[f.ShowTabCount.Key]).then(()=>m()).then(()=>a.tabs.query({})).then(({length:a})=>n(a)),d.set(a=>(({lastUsedVersion:r,settings:{usePinyin:s}}=a),{lastStartupTime:Date.now(),lastUsedVersion:Manifest.version})).then(()=>a.management.getSelf()).then(a=>{const b="development"==a.installType?"D":"P",d={dimension1:a.version,dimension2:b};"D"==b&&(f.IsDev=!0),o.set(d),c.popup.set(d),c.options.set(d),o.pageview(),o.timing("loading","background",performance.now()),DEBUG&&console.log("=== startup done",performance.now())}).then(()=>gInstalledPromise).then(({reason:a,previousVersion:b})=>{o.event("extension",a,b),"update"==a&&"1.4.0"==r&&s&&(chrome.tabs.create({url:chrome.extension.getURL("options.html?pinyin")}),o.event("extension","open-options"))}).catch(a=>o.exception(a))}),define("background/background",function(){});
